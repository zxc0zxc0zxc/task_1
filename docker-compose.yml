version: "3.9"

networks:
    task_2_network:
        driver: bridge

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            - db
            - redis
        networks:
            - task_2_network
        environment:
            APP_ENV: production
            APP_DEBUG: "false"
            APP_KEY: "${APP_KEY}"
            DB_CONNECTION: mysql
            DB_HOST: db
            DB_PORT: 3306
            DB_DATABASE: "${DB_DATABASE}"
            DB_USERNAME: "${DB_USERNAME}"
            DB_PASSWORD: "${DB_PASSWORD}"
            REDIS_HOST: "${REDIS_HOST}"
            REDIS_PORT: "${REDIS_PORT}"
        volumes:
            - app_storage:/app/storage
            - app_cache:/app/bootstrap/cache
        healthcheck:
            test: [ "CMD-SHELL", "php -v >/dev/null 2>&1 || exit 1" ]
            interval: 30s
            timeout: 5s
            retries: 3

    nginx:
        image: nginx:stable
        depends_on:
            app:
                condition: service_healthy
        networks:
            - task_2_network
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./public:/var/www/html/public:ro
            - app_storage:/app/storage:ro
        ports:
            - "80:80"
        healthcheck:
            test: [ "CMD-SHELL", "curl -f http://localhost/api/health || exit 1" ]
            interval: 30s
            timeout: 5s
            retries: 3
    db:
        image: mysql:8.0
        container_name: task_2_db
        networks:
            - task_2_network
        environment:
            MYSQL_DATABASE: "${DB_DATABASE:-db}"
            MYSQL_USER: "${DB_USERNAME:-user}"
            MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-rootpassword}"
            MYSQL_PASSWORD: "${DB_PASSWORD:-secret}"
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
    redis:
        image: redis:7-alpine
        container_name: task_2_redis
        restart: unless-stopped
        ports:
            - "6380:6379"
        networks:
            - task_2_network

volumes:
    app_storage:
        driver: local
    app_cache:
        driver: local
    mysql_data:
        driver: local
